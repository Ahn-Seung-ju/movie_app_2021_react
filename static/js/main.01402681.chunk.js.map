{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiCeA,MA7Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACA,sBAAKC,UAAY,QAAjB,UACQ,qBAAKC,IAAKH,EAAQI,IAAON,EAAOA,MAASA,IAC7C,sBAAKI,UAAY,cAAjB,UACI,oBAAIA,UAAY,eAAhB,SAAgCJ,IAChC,oBAAII,UAAY,cAAhB,SAA+BL,IAC/B,oBAAIK,UAAY,gBAAhB,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,oBAAkBL,UAAY,gBAA9B,SACKI,GADMC,QAKf,oBAAGL,UAAY,iBAAf,UAAiCH,EAAQS,MAAM,EAAE,KAAjD,gBC4BGC,G,kNAzCbC,MAAO,CACLC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAC+BC,IAAMC,IAAI,4DADzC,gBACaJ,EADb,EACHK,KAAQA,KAAQL,OACvB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAFxB,2C,uDAIZ,WACAQ,KAAKN,c,oBAKL,WAEE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAYC,EAApB,EAAoBA,OACpB,OAAQ,yBAASV,UAAY,YAArB,SACLS,EACC,qBAAKT,UAAY,SAAjB,SACA,sBAAMA,UAAY,cAAlB,0BAED,qBAAKA,UAAY,SAAjB,SACEU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GA1BL0B,IAAMC,YCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01402681.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({id, year, title, summary, poster, genres}){\n    return (\n    <div className = \"movie\">\n            <img src={poster} alt = {title} title = {title}/>\n        <div className = \"movie__data\">\n            <h3 className = \"movie__title\">{title}</h3>\n            <h5 className = \"movie__year\">{year}</h5>\n            <ul className = \"movie__genres\">\n                {genres.map((genre, index) => (\n                <li key = {index} className = \"genres__genre\">\n                    {genre}\n                </li>\n            ))}\n            </ul>\n            <p className = \"movie__summary\">{summary.slice(0,180)}...</p>\n        </div>\n    </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nclass App extends React.Component{\n  state ={\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {data: { data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading: false});\n  }\n  componentDidMount(){\n  this.getMovies();\n  \n}\n\n  //랜더링 할 때마다 호출되는 함수 보여주는 쪽 담당\n  render(){\n    \n    const { isLoading , movies} = this.state;\n    return (<section className = \"container\">\n      {isLoading \n      ? <div className = \"loader\">\n        <span className = \"loader_text\">Loading...</span>\n    </div> \n    : (<div className = \"movies\">\n        {movies.map(movie =>(\n          <Movie\n            key={movie.id}\n            id={movie.id}\n            year={movie.year}\n            title={movie.title}\n            summary={movie.summary}\n            poster={movie.medium_cover_image}\n            genres={movie.genres}\n            />\n        ))}\n    </div>\n    )}</section>\n    )\n  }\n\n}\n\nexport default App;\n\n\n\n// constructor(props) {\n  //   super(props);\n  //   console.log(\"hello\");\n  // }\n\n\n  // state = {\n  //   count: 0\n  // };\n  \n  \n  //add = () => {\n    // console.log(\"add\");\n    // this.state.count = 1;\n    // this.setState({count: 1});\n    //this.setState(current => ({count: current.count + 1}));\n\n  //};\n  \n  \n  //minus = () => {\n    // console.log(\"minus\")\n    // this.state.count = -1;\n    // this.setState({count: -1});\n    //this.setState(current => ({count: current.count - 1}));\n // };\n  // component가 처음 렌더링 되면 호출되는 함수\n  // componentDidMount(){\n  //   console.log(\"component rendered\")\n  // }\n  //업데이트 할 때마다 호출되는 함수 ex) add, minus\n  // componentDidUpdate(){\n  //   console.log(\"i just updated\")\n  // }\n  //component가 종료될때 실행되는 함수\n  // componentWillUnmount(){\n  //   console.log(\"Goodby, cruel\")\n  // }\n    // <div>\n    //   <h1>The number is : {this.state.count}</h1>\n    //   <button onClick={this.add}>Add</button>\n    //   <button onClick={this.minus}>Minus</button>\n    // </div>\n\n    //componentDidMount(){\n  // setTimeout(() => {\n  //   this.setState({isLoading: false});\n  // }, 6000);\n\n  \n//}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}